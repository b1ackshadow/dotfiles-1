#set imap_user=proycon
#set imap_pass=`cat ~/.anaproy`
#set folder=imaps://mail.anaproy.nl/
#set imap_check_subscribed






set mbox_type=Maildir
set folder="~/Maildir/"
set mask="!^\\.[^.]"
set record="+.Sent"
set postponed="+.Drafts"
set spoolfile="+INBOX"
mailboxes `echo -n "+ "; find ~/Maildir -maxdepth 1 -type d -name ".*" -printf "+'%f' "`
#source ~/.mutt/mailboxes 
alternative_order text/plain text/html



#set spoolfile=+INBOX
#mailboxes =INBOX

#set smtp_url=`python -c 'print "smtps://proycon:X@mail.anaproy.nl".replace("X",open("/home/proycon/.anaproy","r").read()[:-1]).strip()'`
set from     = "proycon@anaproy.nl"
set sendmail = "/usr/bin/msmtp"
set sendmail_wait = 0
set envelope_from=yes
set use_envelope_from=yes
macro generic "<esc>1" ":set from=proycon@anaproy.nl"
macro generic "<esc>2" ":set from=m.vangompel@let.ru.nl"
macro generic "<esc>3" ":set from=proycon@unilang.org"

set ssl_verify_host = no
set ssl_verify_dates = no
set wait_key = no  

set realname="Maarten van Gompel"
#set from="proycon@anaproy.nl"
#set use_from=yes
set edit_headers = yes

#set sidebar_width = 32 
#set sidebar_shortpath = yes
#hset sidebar_sort = yes

set text_flowed = yes


ignore *
unignore From:
unignore To:
unignore Reply-To:
unignore Mail-Followup-To:
unignore Subject:
unignore Date:
unignore CC:
unignore BCC:
unignore X-Mailer:
hdr_order From: Return-Path: \
Reply-To: \
Date: Subject: Importance:

#set display_filter= "~/bin/mutt_addsender.sh"

# Store message headers locally to speed things up.
# If hcache is a folder, Mutt will create sub cache folders for each account which may speeds things even more up.
set header_cache = ~/.cache/mutt

# Store messages locally to speed things up, like searching message bodies.
# Can be the same folder as header_cache.
# This will cost important disk usage according to your e-mail amount.
set message_cachedir = "~/.cache/mutt"

# Specify where to save and/or look for postponed messages.
set postponed = +/Drafts

# Allow Mutt to open new imap connection automatically.
unset imap_passive

# Keep IMAP connection alive by polling intermittently (time in seconds).
set imap_keepalive = 300

# How often to check for new mail (time in seconds).
set mail_check = 120

set send_charset="utf-8"

#source ~/.mutt/mutt-colors-solarized/mutt-colors-solarized-dark-16.muttrc


bind  index   \Cr      imap-fetch-mail


#scroll rather than page
set menu_scroll = yes


set signature = "~/.signature"
set postpone = ask-yes
#set postponed = =MuttMail/postponed
set editor = 'vim +/^$ "+normal j"' # Open vim one line past first blank line
set fast_reply = yes
set abort_nosubject = no
set abort_unmodified = ask-yes

unset confirmappend
set delete 


# Replying
set reply_self = no         # Reply to recipients, not to myself on my own msgs
set indent_string = "> "
set include = yes
set attribution = "On %d, %n wrote:"
set bounce_delivered = yes

# Folder and Mailbox
set copy = yes              # Save copy of outgoing msgs
set record = +Sent # Where do we keep sent messages?



# from Justin R. Miller's
# `Everything You Need To Know To Start Using GnuPG with Mutt'
# http://codesorcery.net/old/mutt/mutt-gnupg-howto

set pgp_decode_command="gpg %?p?--passphrase-fd 0? --no-verbose --batch --output - %f"
set pgp_verify_command="gpg --no-verbose --batch --output - --verify %s %f"
set pgp_decrypt_command="gpg --passphrase-fd 0 --no-verbose --batch --output - %f"
set pgp_sign_command="gpg --no-verbose --batch --output - --passphrase-fd 0 --armor --detach-sign --textmode %?a?-u %a? %f"
set pgp_clearsign_command="gpg --no-verbose --batch --output - --passphrase-fd 0 --armor --textmode --clearsign %?a?-u %a? %f"
set pgp_encrypt_only_command="/usr/lib/mutt/pgpewrap gpg --batch --quiet --no-verbose --output - --encrypt --textmode --armor --always-trust --encrypt-to 0x1A31555C -- -r %r -- %f"
set pgp_encrypt_sign_command="/usr/lib/mutt/pgpewrap gpg --passphrase-fd 0 --batch --quiet --no-verbose --textmode --output - --encrypt --sign %?a?-u %a? --armor --always-trust --encrypt-to 0x1A31555C -- -r %r -- %f"
set pgp_import_command="gpg --no-verbose --import -v %f"
set pgp_export_command="gpg --no-verbose --export --armor %r"
set pgp_verify_key_command="gpg --no-verbose --batch --fingerprint --check-sigs %r"
set pgp_list_pubring_command="gpg --no-verbose --batch --with-colons --list-keys %r" 
set pgp_list_secring_command="gpg --no-verbose --batch --with-colons --list-secret-keys %r" 
#set pgp_autosign=yes
set pgp_sign_as=0x1A31555C
set pgp_replyencrypt=yes
set pgp_timeout=1800
set pgp_good_sign="^gpg: Good signature from"

# automatically sign all outgoing messages
#set crypt_autosign
# sign only replies to signed messages
set crypt_replysign

# automatically encrypt outgoing messages
#set crypt_autoencrypt=yes
# encrypt only replies to signed messages
#set crypt_replyencrypt=yes
# encrypt and sign replies to encrypted messages
set crypt_replysignencrypted=yes

# automatically verify the sign of a message when opened
set crypt_verify_sig=yes

# Message Display Options
set smart_wrap = yes        # Wrap at word boundaries if possible
set pager_index_lines = 12   # Show a few lines from the index above the msg
set pager_stop = yes        # PgDown at bottom does not move to next message
set markers = no            # Don't add "+" on wrapped lines (hard to copy)



# Key bindings
bind index R    group-reply
bind pager R    group-reply
bind index gg   first-entry
bind index G    last-entry
bind  pager   <up>     previous-line
bind  pager   <down>   next-line
#bind  pager   <left>   exit
#bind  pager   <right>  view-attachments
bind  attach  <left>   exit
bind  attach  <right>  view-attach
bind  index   <right>  display-message
#macro index   <left>   "c?\t"   "Get Folder List"
bind  index   \Cr      imap-fetch-mail
bind  browser <right>  view-file
bind  browser <left>   exit
macro index,pager gi '<change-folder>+INBOX<enter>'
macro index,pager gs '<change-folder>+Sent<enter>'
macro index,pager gd '<change-folder>+Drafts<enter>'
macro index,pager gn '<change-folder>+Notifications<enter>'
#bind index,pager K           sidebar-prev
#bind index,pager J           sidebar-next
#bind index,pager L           sidebar-open
#macro index b 'toggle sidebar_visible'
#macro pager b 'toggle sidebar_visible'
macro index c "<change-folder>?<toggle-mailboxes>" "open a different folder"
macro pager c "<change-folder>?<toggle-mailboxes>" "open a different folder"
macro index Z "<shell-escape>rm -rf ~/.mu/results; mu find -o l -l ~/.mu/results " "mu find"
macro index X "<change-folder-readonly>~/.mu/results\n" "display mu find results"

#aliases:
source ~/.mutt/aliases.txt
set alias_file=~/.mutt/aliases.txt


auto_view text/html

color index green    black "~h '(From|To|Cc): .*(van-gompel|lico|zen|wijck|wijwater)\.nl'"
color index green    black "~h '(From|To|Cc): .*(anaxotic|elkeq4|ringoir|kraf).*"
color index blue    black "~h '(Form|To|Cc): .*unilang.org"
color index yellow  black "~h '(From|To|Cc): .*ru.nl"
color index yellow  black "~h '(From|To|Cc): .*uvt.nl"
color index yellow  black "~h '(From|To|Cc): .*\.(ru|mpi|knaw|uu|fryske-akademy|uva|vu)\.nl"
color index yellow  black "~h '(From|To|Cc): .*(tilburguniversity)\.edu"
color index yellow  black "~h '(From|To|Cc): .*(kunneman|hurriyetoglu|versteegh).*"
color index brightblack black "~h 'From: (Marjon van Waarsenburg).*"


color index brightwhite black "~O"
color index brightwhite black "~N" #mark as unread!

#unread messages after this will not be marked bright white!

color index brightblack black "~h 'Subject: .*Internal Server Error.*"
color index brightblack black "~h 'Subject: .*(Studcki|StudCKI).*"
color index brightblack black "~h 'Subject: .*java-nlp-user.*"
color index brightblack black "~h 'Subject: .*SPAM.*"
color index brightblack black "~h 'Subject: .*Newsletter.*"
color index brightblack black "~h 'Subject: .*finished succesfully.*"
color index brightblack black "~h 'Subject: .*finished with errors.*"
color index brightblack black "~h 'Subject: .*Periodic process report.*"
color index brightblack black "~h 'Subject: .*[N|n]otification.*"
color index brightblack black "~h '(From|To|Cc): .*allout\.org.*"
color index brightblack black "~h '(From|To|Cc): .*piratenpartij.*"

color index magenta black "~h 'List-Id:"
color index brightblack black "~D"

color index brightred black "~F"

color index cyan black "~Q"

# Colour URLs in mails
color body blue black "(finger|ftp|hg|http(|s)|news|tel)://[^ ]*"
color body blue black "mailto:[-a-z_0-9.]+@[-a-z_0-9.]+"

#color sidebar_new brightyellow black

save-hook "~h '(From|To|Cc): .*unilang.*'" =UniLang
save-hook "~h '(From|To|Cc): .*anaxotic.*'" =Hans
save-hook "~h '(From|To|Cc): .*(van-gompel|elkeq4|wijck|wijwater).*'" =Familie
save-hook "~h 'Subject: .*SPAM.*'" =Junk
save-hook "~h 'Subject: .*Radboud.*" =Work.Notifications
save-hook "~h 'Subject: .*landsresearch.*'" =Work.Notifications
save-hook "~h 'Subject: .*Siksleden.*'" =Work.Notifications
save-hook "~h 'Subject: .*\[PON\].*'" =Work.Notifications
save-hook "~h 'Subject: .*Internal Server Error.*'" =Work.Notifications
save-hook "~h 'Subject: .*CLS Newsletter.*'" =Work.Notifications
save-hook "~h 'Subject: .*java-nlp-user.*'" =Tech.javanlp
save-hook "~h 'Subject: .*finished succesfully.*" =Work.Notifications 
save-hook "~h 'Subject: .*finished with errors.*" =Work.Notifications 
save-hook "~h 'Subject: .*Periodic process report.*" =Work.Notifications 
save-hook "~h 'Subject: .*[Vv]alkuil.*" =Work.RU.Valkuil 
save-hook "~h 'Subject: .*[Ff]owlt.*" =Work.RU.Valkuil 
save-hook "~h 'Subject: .*[Cc][Ll][Aa][Mm].*" =Work.RU.CLAM+TICCLops
save-hook "~h 'Subject: .*[Cc]olibri.*" "=Work.RU.Colibri PhD"
save-hook "~h 'Subject: .*[Tt]\-?[Ss]can.*" =Work.RU.tscan
save-hook "~h 'Subject: .*[Ff]rog.*" =Work.RU.Frog+ucto
save-hook "~h 'Subject: .*[Uu]cto.*" =Work.RU.Frog+ucto
save-hook "~h 'Subject: .*[Ff][Oo][Ll][Ii][Aa].*" =Work.RU.FoLiA+SoNaR
save-hook "~h 'Subject: .*[Ss][Oo][Nn][Aa][Rr].*" =Work.RU.FoLiA+SoNaR
save-hook "~h 'Subject: .*[Dd]utch[Ss]em[Cc]or.*" =Work.ILK.DutchSemCor
save-hook "~h 'Subject: .*[Oo]ersetter.*" =Work.RU.Oersetter
save-hook "~h 'Subject: .*[Ss]em[Ee]val.*" =Work.RU.semeval
save-hook "~h 'Subject: .*\[Corpora-List\].*" =ReadOnly.CorporaList
save-hook "~h 'Subject: .*\[Moses-support\].*" =ReadOnly.MosesSupport
save-hook "~h '(From|To|Cc): .*debian-science.*" =ReadOnly
save-hook "~h '(From|To|Cc): .*fryske.*" =Work.RU.Oersetter
save-hook "~h '(From|To|Cc): .*(Korse|Wanda|Zen Centrum|zen.\nl).*" =Psi
save-hook "~h '(From|To|Cc): .*(Hornix|Wakkerman|Waarsenburg|Ansem|Oor|Lisenka Fox|cls\@let\.ru\.nl|Faculteit|Hilberink|Matos\-Krez).*" =Work.Notifications

## Multiplexing using tmux

# edit messages in a new screen window
set editor="cp %s %s.2; tmux new-window -a -t mutt '~/bin/mutt-compose.sh %s.2'"
unset wait_key

# forward messages
#macro index,pager f "v<save-entry>/tmp/mutt-forward<enter>q<shell-escape>tmux new-window -t mail '~/bin/mutt-compose.sh /tmp/mutt-forward personal'<enter>"

# override the <recall-message> hotkey
macro index,pager M "<shell-escape>tmux new-window -t mutt 'mutt -F ~/.mutt_compose -p'<enter>"
# prevent recall on <mail>
set recall=no

# Set the editor for for editing messages in-place,
# allows re-editing of messages before sending, e.g. for use in forwarding messages.
macro compose e '<enter-command>set my_oldeditor=$editor<enter><enter-command>set editor="vim"<enter><edit-message><enter-command>set editor=$my_oldeditor<enter>'
#macro index,pager e '<enter-command>set editor="vim +set\ tw=72 +/^$/+1"<enter><edit>'
#<enter-command>set editor="cp %s %s.2; tmux new-window -t mail '~/bin/mutt-compose.sh %s.2'"<enter>'

# open mailbox listing in a new window
macro index,pager y '<shell-escape>tmux new-window -t mutt "mutt -y"<enter>'
